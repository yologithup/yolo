/**
 * @author yolo
 * @date 2019/10/19-17:11
 * 内部类：
 * 如果一个事物的内部包含另一个事物，那么这就是一个类包含另一个类
 * 例如：身体和心脏的关系，汽车和发动机的关系
 * 分类：
 * 1.成员内部类
 * 2.局部内部类（包含匿名内部类）
 * 成员内部类的定义格式：
 * 修饰符 class 外部类名称{
 *     修饰符 class 内部类名称{
 *         //...
 *     }
 *     //...
 * }
 * 注意：内用外，随意访问，外用内，需要内部类对象
 * ========================================
 * 如何使用成员内部类：有两种方式
 * 1.间接方式：在外部类方法中，使用内部类；然后main只是调用外部类的方法
 * 2.直接方式：公式
 * 类名称 对象名称=new 类名称（）；
 * 外部类名称.内部类名称  对象名=new 外部类名称().new 内部类名称();
 *  1.间接方式：在外部类方法中，使用内部类；然后main只是调用外部类的方法
 *  2.直接方式：公式
 *  类名称 对象名称=new 类名称（）；
 *  外部类名称.内部类名称  对象名=new 外部类名称().new 内部类名称();
 *
 *
 *  局部内部类
 *  如果一个类是定义在一个方法的内部，那么就是一个局部内部类
 *  “局部”：只是当前的所属方法才能使用它，处啦这个方法外边就不能使用
 *  定义格式：
 *  修饰符 class 外部类名称{
 *      修饰符 返回值类型  外部类方法名（参数列表）{
 *             class 内部类名称{
 *              //...
 *          }
 *      }
 * }
 * 如何使用：
 * 想办法调用外部类方法即可（内部类包含在它的里边）
 *就是普通类的调用它外部类的方法，而这个方法内部存在局部内部类，你可以在这个外部类方法的内部进行内部类的实例化，通过内部类的实例化对象从而调用内部类里的内部类方法
 */
public class Demo01InnerClass {
    public static void main(String[] args) {
        Body body=new Body();
        //通过外部类的对象，调用外部类的方法，里边间接的使用内部类Heart
        body.methodBody();
        //按照公式直接使用内部类
        Body.Heart heart=new Body().new Heart();
        heart.beat();

        Outer02 obj=new Outer02();
        obj.methodOuter();//就是普通类的调用它外部类的方法，而这个方法内部存在局部内部类，
                    // 你可以在这个外部类方法的内部进行内部类的实例化，
                    // 通过内部类的实例化对象从而调用内部类里的内部类方法
    }
}
